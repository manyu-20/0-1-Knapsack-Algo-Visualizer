<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0" crossorigin="anonymous">
 <link rel="stylesheet" href="css/style1.css">
  <title>0/1 Knapsack</title>

</head>

<body>
      <div class="container cont">
        <h1 class="hello" style="color:white">0/1 Knapsack Problem</h1>
        <p class="inl"style="color:white">Weight Array : </p>
        <p class="inl" id = "WeightArray"style="color:white"><%=weights%></p>
        <p></p>
        <p class="inl"style="color:white">Profit Array : </p>
        <p class="inl"id = "ProfitArray"style="color:white"><%=prices%></p>
        <p></p>
        <p class="inl"style="color:white">Target Weight : </p>
        <p class="inl"id="MaxWeight"style="color:white"><%=total%></p>

      </div>



  <div class="container cont">
    <div class="progress">
<div id="progress" class="progress-bar" role="progressbar" style="width: 0;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
</div>
    <table class="table table-striped"style="background:white">

      <% for(let i = 0;i<=size;i++){ %>
      <tr>
        <% for(let j = 0;j<=total;j++){ %>

        <td class="<%=i +"_"+j%>  matrix">0</td>
        <% } %>

      </tr>
      <% } %>
    </table>
  </div>

    <div class="container">
      <div class="container btn ">
        <div class="container">
            <div class="row">
              <div class="col-lg-4">

              </div>
              <div class="col-lg-4">
                <button class="btn btn-primary bt" onclick="myFunction()">Start Solving!</button>

              </div>
              <div class="col-lg-4">

              </div>
            </div>
        </div>
      </div>
    </div>
  <div class="container">
    <div class="row">
      <div class="col-lg-4">

      </div>
      <div class="col-lg-4">
        <h2  style="text-align: center; padding: 1rem;color:white;">Weight Items</h2>
        <table class="table table-striped"style="background:white">

          <tr>
            <% for(let k = 0;k < size;k++){ %>

            <td class="<%=k +"_"%>   matrix"><%= wsol[k] %></td>
            <% } %>

          </tr>
        </table>
      </div>
      <div class="col-lg-4">

      </div>
    </div>
  </div>

  <div class="container cardContainer">
  <div class="row">
    <div class="col-lg-6 inl1">
      <div class="card text-white bg-primary mb-3" style="max-width: 18rem;">
    <div class="card-body">
      <h5 class="card-title inl1">Items Included</h5>
      <p id="itemsIncluded" class="card-text inl1"></p>
    </div>
  </div>
    </div>
    <div class="col-lg-6">
      <div class="card text-white bg-primary mb-3" style="max-width: 18rem;">
    <div class="card-body">
      <h5 class="card-title">Final Answer</h5>
      <p id="finalAnswer" class="card-text"></p>
    </div>
  </div>
    </div>

  </div>

  </div>








  <script type="text/javascript">
    function sleep(ms) {
      return new Promise(resolve => setTimeout(resolve, ms));
    }






    function max(a, b)
    {
          return (a > b) ? a : b;
    }


    async function myFunction()
    {
      var element = document.getElementsByClassName("hello");
      element[0].innerHTML = "Problem solving is in progress!";

      let val = document.getElementById('ProfitArray').innerHTML.split(" ");
      let wt = document.getElementById('WeightArray').innerHTML.split(" ");
      let t = document.getElementById('MaxWeight').innerHTML.split(" ");
      val = val.map(i=>Number(i));
      wt = wt.map(i=>Number(i));
      W = t.map(i=>Number(i))[0];
      n = wt.length;
      // console.log(val);
      // console.log(wt);
      // console.log(W);
      // console.log(n);


        let i, w;
        let K = new Array(n + 1);

        // Build table K[][] in bottom up manner
        for (i = 0; i <= n; i++)
        {
            K[i] = new Array(W + 1);
            let wClass = i+"_";
            let wEle = document.getElementsByClassName(wClass);
            // console.log(wEle);
            // <div id="progress" class="progress-bar" role="progressbar" style="width: 0;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>

            let percent = (i/n) * 100;
            percent = Math.round(percent);
            let progress = document.getElementById("progress");
            // console.log(percent);
            progress.style.width = percent+"%";
            progress.innerHTML = percent+"%";


            for (w = 0; w <= W; w++)
            {

                if (i == 0 || w == 0)
                    K[i][w] = 0;
                else if (wt[i - 1] <= w){
                    K[i][w]
                        = max(val[i - 1]
                         + K[i - 1][w - wt[i - 1]],
                         K[i - 1][w]);
                let innerVal = i + "_" + w;
                let ele = document.getElementsByClassName(innerVal);
                ele[0].innerHTML = K[i][w];
                ele[0].style.backgroundColor = "Aquamarine";
              }
                else{
                    K[i][w] = K[i - 1][w];
                    let innerVal = i + "_" + w;
                    let ele = document.getElementsByClassName(innerVal);
                    ele[0].innerHTML = K[i][w];
                    ele[0].style.backgroundColor = "Aquamarine";
                  }
            }
            await sleep(1800);
        }
        let innerVal = n + "_" + W;
        let ele = document.getElementsByClassName(innerVal);
        ele[0].innerHTML = K[n][W];
        ele[0].style.backgroundColor = "Chartreuse";

        // return K[n][W];
        let res = K[n][W];
        w = W;
        let items = [];
        let itemsIndex = [];
       for (i = n; i > 0 && res > 0; i--)
       {

           // either the result comes from the top
           // (K[i-1][w]) or from (val[i-1] + K[i-1]
           // [w-wt[i-1]]) as in Knapsack table. If
           // it comes from the latter one/ it means
           // the item is included.
           if (res == K[i - 1][w])
               continue;
           else {

               // This item is included.
               let k = i-1;
               let wClass = k+"_";
               let wEle = document.getElementsByClassName(wClass);
               wEle[0].style.backgroundColor = "Chartreuse";
               items.push(wt[i-1]);
               itemsIndex.push(i-1);
               // document.write(wt[i - 1] + " ");

               // Since this weight is included its
               // value is deducted
               res = res - val[i - 1];
               w = w - wt[i - 1];
           }
       }
       document.getElementById("itemsIncluded").innerHTML = "Weights Included: " + items + " & Items index = " + itemsIndex ;
       document.getElementById("finalAnswer").innerHTML = " Profit = "  + K[n][W];
       element[0].innerHTML = "Problem is solved!";

    }
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-p34f1UUtsS3wqzfto5wAAmdvj+osOnFyQFpp4Ua3gs/ZVWx6oOypYoCJhGGScy+8" crossorigin="anonymous"></script>


</body>

</html>
